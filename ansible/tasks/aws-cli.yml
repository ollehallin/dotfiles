- name: Remove AWS CLI v1
  package: name={{ item }} state=absent
  with_items:
    - awscli

- name: Remove snap aws-cli
  snap: name=aws-cli state=absent

- name: Install Boto
  package: name={{ item }} state=present
  with_items:
    - python3-boto
    - python3-boto3
    - s3cmd

- name: Create /tmp/aws-cli
  file: path=/tmp/aws-cli state=directory

- name: Fetch AWS CLI archive
  unarchive:
    src: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
    dest: "/tmp/aws-cli"
    remote_src: yes

- name: Install AWS CLI
  command: /tmp/aws-cli/aws/install --update

- name: Create AWS config directory
  file:
    path: "{{ actual_home }}/.aws"
    state: directory
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0755

- name: Configure AWS CLI profiles
  ini_file:
    dest: "{{ actual_home }}/.aws/config"
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0644
    section: "{{ item.s }}"
    option: "{{ item.k }}"
    value: "{{ item.v }}"
    backup: yes
  with_items:
  - { s: 'profile hit', k: region, v: eu-west-1 }
  - { s: 'profile hit', k: output, v: json }
  - { s: 'profile crisp', k: region, v: eu-central-1 }
  - { s: 'profile crisp', k: output, v: json }
  - { s: 'profile codekvast', k: region, v: eu-central-1 }
  - { s: 'profile codekvast', k: output, v: json }
  notify: Test AWS CLI
  loop_control:
    label: "[{{ item.s }}] {{ item.k }}={{ item.v }}"

- name: Configure AWS CLI credentials
  ini_file:
    dest: "{{ actual_home }}/.aws/credentials"
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0600
    section: "{{ item.s }}"
    option: "{{ item.k }}"
    value: "{{ item.v }}"
    backup: yes
  with_items:
  - { s: 'hit', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'hit', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  - { s: 'crisp', k: 'aws_access_key_id', v: "{{ secrets.aws.crisp.access_key }}" }
  - { s: 'crisp', k: 'aws_secret_access_key', v: "{{ secrets.aws.crisp.secret_key }}" }
  - { s: 'codekvast', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'codekvast', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  notify: Test AWS CLI
  loop_control:
    label: "[{{ item.s }}] {{ item.k }}=xxxxxxxx"

- name: Configure Boto profiles
  ini_file:
    dest: "{{ actual_home }}/.boto"
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0600
    section: "{{ item.s }}"
    option: "{{ item.k }}"
    value: "{{ item.v }}"
    backup: yes
  with_items:
  - { s: 'hit', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'hit', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  - { s: 'codekvast', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'codekvast', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  - { s: 'crisp', k: 'aws_access_key_id', v: "{{ secrets.aws.crisp.access_key }}" }
  - { s: 'crisp', k: 'aws_secret_access_key', v: "{{ secrets.aws.crisp.secret_key }}" }
  notify: Test AWS CLI
  loop_control:
    label: "[{{ item.s }}] {{ item.k }}=xxxxxxxx"

- name: Create $HOME/.s3cfg
  template:
    src: s3cfg.j2
    dest: "{{ actual_home }}/.s3cfg"
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0600

- name: Uninstall AWS CLI and Boto
  package:
    name:
    - awscli
    - aws-shell
    - python-boto
    - python-boto3
    state: absent

- name: Install S3cmd
  package:
    name:
    - s3cmd
    state: present

- name: Install snap aws-cli
  shell: snap install {{ item }} --classic
  with_items:
    - aws-cli

- name: Create AWS config directory
  file:
    path: /home/{{ actual_username }}/.aws
    state: directory
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0755

- name: Configure AWS CLI profiles
  ini_file:
    dest: /home/{{ actual_username }}/.aws/config
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0644
    section: "{{ item.s }}"
    option: "{{ item.k }}"
    value: "{{ item.v }}"
    backup: yes
  with_items:
  - { s: 'profile hit', k: region, v: eu-west-1 }
  - { s: 'profile crisp', k: region, v: eu-central-1 }
  - { s: 'profile codekvast', k: region, v: eu-central-1 }
  notify: Test AWS CLI
  loop_control:
    label: "[{{ item.s }}] {{ item.k }}={{ item.v }}"

- name: Configure AWS CLI credentials
  ini_file:
    dest: /home/{{ actual_username }}/.aws/credentials
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0600
    section: "{{ item.s }}"
    option: "{{ item.k }}"
    value: "{{ item.v }}"
    backup: yes
  with_items:
  - { s: 'hit', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'hit', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  - { s: 'codekvast', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'codekvast', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  - { s: 'crisp', k: 'aws_access_key_id', v: "{{ secrets.aws.crisp.access_key }}" }
  - { s: 'crisp', k: 'aws_secret_access_key', v: "{{ secrets.aws.crisp.secret_key }}" }
  notify: Test AWS CLI
  loop_control:
    label: "[{{ item.s }}] {{ item.k }}=xxxxxxxx"

- name: Configure Boto profiles
  ini_file:
    dest: /home/{{ actual_username }}/.boto
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0600
    section: "{{ item.s }}"
    option: "{{ item.k }}"
    value: "{{ item.v }}"
    backup: yes
  with_items:
  - { s: 'hit', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'hit', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  - { s: 'codekvast', k: 'aws_access_key_id', v: "{{ secrets.aws.hit.access_key }}" }
  - { s: 'codekvast', k: 'aws_secret_access_key', v: "{{ secrets.aws.hit.secret_key }}" }
  - { s: 'crisp', k: 'aws_access_key_id', v: "{{ secrets.aws.crisp.access_key }}" }
  - { s: 'crisp', k: 'aws_secret_access_key', v: "{{ secrets.aws.crisp.secret_key }}" }
  notify: Test AWS CLI
  loop_control:
    label: "[{{ item.s }}] {{ item.k }}=xxxxxxxx"

- name: Create $HOME/.s3cfg
  template:
    src: s3cfg.j2
    dest: /home/{{ actual_username }}/.s3cfg
    owner: "{{ actual_username }}"
    group: "{{ actual_username }}"
    mode: 0600
